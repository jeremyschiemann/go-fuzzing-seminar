[oraclert] selefcm timeout: 500[oraclert] started
=== RUN   TestCoordinationWithReceiver
[oraclert] already started, return existing entry.
=== RUN   TestCoordinationWithReceiver/Receiver_should_get_all_updates_even_when_one_provider_closes_its_channel
=== RUN   TestCoordinationWithReceiver/Receiver_should_get_all_updates_even_when_the_channel_is_blocked
[oraclert]: AfterRun
[oraclert]: AfterRunFuzz
[oraclert]: 4 selects
[oraclert]: CheckBugEnd...
End of unit test. Check bugs

-----NO BLOCKING


---Stack:
goroutine 22 [running]:
runtime.DumpAllStack()
	/usr/local/go/src/runtime/myoracle_tmp.go:207 +0x85
gfuzz/pkg/oraclert.AfterRunFuzz(0xc00014a5d0)
	/usr/local/go/src/gfuzz/pkg/oraclert/oracle.go:369 +0xfd
gfuzz/pkg/oraclert.AfterRun(0xc00014a5d0)
	/usr/local/go/src/gfuzz/pkg/oraclert/oracle.go:322 +0x73
github.com/prometheus/prometheus/discovery.TestCoordinationWithReceiver(0xc00027db80)
	/fuzz/target/discovery/manager_test.go:1248 +0x1185
testing.tRunner(0xc00027db80, 0x91b1d0)
	/usr/local/go/src/testing/testing.go:1193 +0xef
created by testing.(*T).Run
	/usr/local/go/src/testing/testing.go:1238 +0x2b5

goroutine 1 [chan receive]:
testing.(*T).Run(0xc00027db80, 0x904eb0, 0x1c, 0x91b1d0, 0x49a601)
	/usr/local/go/src/testing/testing.go:1239 +0x2dc
testing.runTests.func1(0xc00027d900)
	/usr/local/go/src/testing/testing.go:1511 +0x78
testing.tRunner(0xc00027d900, 0xc000175c80)
	/usr/local/go/src/testing/testing.go:1193 +0xef
testing.runTests(0xc00014a618, 0xc09ec0, 0x8, 0x8, 0xc1cc417987a82758, 0x70236b913, 0xc16580, 0x7ff798315118)
	/usr/local/go/src/testing/testing.go:1509 +0x305
testing.(*M).Run(0xc00028aea0, 0x0)
	/usr/local/go/src/testing/testing.go:1417 +0x1eb
go.uber.org/goleak.VerifyTestMain(0x98a6e0, 0xc00028aea0, 0xc000175e70, 0x2, 0x2)
	/go/pkg/mod/go.uber.org/goleak@v1.1.10/testmain.go:53 +0x38
github.com/prometheus/prometheus/util/testutil.TolerantVerifyLeak(0xc00028aea0)
	/fuzz/target/util/testutil/testing.go:34 +0xd2
github.com/prometheus/prometheus/discovery.TestMain(0xc00028aea0)
	/fuzz/target/discovery/manager_test.go:40 +0x57
main.main()
	_testmain.go:59 +0x165

--- PASS: TestCoordinationWithReceiver (1.01s)
    --- PASS: TestCoordinationWithReceiver/Receiver_should_get_all_updates_even_when_one_provider_closes_its_channel (0.30s)
    --- PASS: TestCoordinationWithReceiver/Receiver_should_get_all_updates_even_when_the_channel_is_blocked (0.70s)
PASS
