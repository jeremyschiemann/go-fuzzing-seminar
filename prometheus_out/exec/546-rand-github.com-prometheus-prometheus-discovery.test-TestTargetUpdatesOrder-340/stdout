[oraclert] selefcm timeout: 2500[oraclert] started
=== RUN   TestTargetUpdatesOrder
[oraclert] already started, return existing entry.
=== RUN   TestTargetUpdatesOrder/Single_TP_no_updates
=== RUN   TestTargetUpdatesOrder/Multiple_TPs_no_updates
=== RUN   TestTargetUpdatesOrder/Single_TP_empty_initials
=== RUN   TestTargetUpdatesOrder/Multiple_TPs_empty_initials
=== RUN   TestTargetUpdatesOrder/Single_TP_initials_only
=== RUN   TestTargetUpdatesOrder/Multiple_TPs_initials_only
=== RUN   TestTargetUpdatesOrder/Single_TP_initials_followed_by_empty_updates
=== RUN   TestTargetUpdatesOrder/Single_TP_initials_and_new_groups
=== RUN   TestTargetUpdatesOrder/Multiple_TPs_initials_and_new_groups
    manager_test.go:726: 2: no update arrived within the timeout limit
=== RUN   TestTargetUpdatesOrder/One_TP_initials_arrive_after_other_TP_updates.
    manager_test.go:715: 
        	Error Trace:	manager_test.go:768
        	            				manager_test.go:715
        	Error:      	Not equal: 
        	            	expected: []*targetgroup.Group{(*targetgroup.Group)(0xc000258810), (*targetgroup.Group)(0xc000258870)}
        	            	actual  : []*targetgroup.Group{(*targetgroup.Group)(0xc0002124e0), (*targetgroup.Group)(0xc000212510), (*targetgroup.Group)(0xc0002125a0), (*targetgroup.Group)(0xc0002125d0)}
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1,2 +1,2 @@
        	            	-([]*targetgroup.Group) (len=2) {
        	            	+([]*targetgroup.Group) (len=4) {
        	            	  (*targetgroup.Group)({
        	            	@@ -4,3 +4,3 @@
        	            	    (model.LabelSet) (len=1) {
        	            	-    (model.LabelName) (len=12) "__instance__": (model.LabelValue) (len=1) "3"
        	            	+    (model.LabelName) (len=12) "__instance__": (model.LabelValue) (len=1) "1"
        	            	    }
        	            	@@ -13,3 +13,3 @@
        	            	    (model.LabelSet) (len=1) {
        	            	-    (model.LabelName) (len=12) "__instance__": (model.LabelValue) (len=1) "4"
        	            	+    (model.LabelName) (len=12) "__instance__": (model.LabelValue) (len=1) "2"
        	            	    }
        	            	@@ -18,2 +18,20 @@
        	            	   Source: (string) (len=10) "tp1_group2"
        	            	+ }),
        	            	+ (*targetgroup.Group)({
        	            	+  Targets: ([]model.LabelSet) (len=1) {
        	            	+   (model.LabelSet) (len=1) {
        	            	+    (model.LabelName) (len=12) "__instance__": (model.LabelValue) (len=1) "5"
        	            	+   }
        	            	+  },
        	            	+  Labels: (model.LabelSet) <nil>,
        	            	+  Source: (string) (len=10) "tp2_group1"
        	            	+ }),
        	            	+ (*targetgroup.Group)({
        	            	+  Targets: ([]model.LabelSet) (len=1) {
        	            	+   (model.LabelSet) (len=1) {
        	            	+    (model.LabelName) (len=12) "__instance__": (model.LabelValue) (len=1) "6"
        	            	+   }
        	            	+  },
        	            	+  Labels: (model.LabelSet) <nil>,
        	            	+  Source: (string) (len=10) "tp2_group2"
        	            	  })
        	Test:       	TestTargetUpdatesOrder/One_TP_initials_arrive_after_other_TP_updates.
=== RUN   TestTargetUpdatesOrder/Single_TP_empty_update_in_between
    manager_test.go:726: 1: no update arrived within the timeout limit
[oraclert]: AfterRun
[oraclert]: AfterRunFuzz
[oraclert]: 2 selects
[oraclert]: CheckBugEnd...
End of unit test. Check bugs

-----NO BLOCKING


---Stack:
goroutine 38 [running]:
runtime.DumpAllStack()
	/usr/local/go/src/runtime/myoracle_tmp.go:207 +0x85
gfuzz/pkg/oraclert.AfterRunFuzz(0xc00021a120)
	/usr/local/go/src/gfuzz/pkg/oraclert/oracle.go:369 +0xfd
gfuzz/pkg/oraclert.AfterRun(0xc00021a120)
	/usr/local/go/src/gfuzz/pkg/oraclert/oracle.go:322 +0x73
github.com/prometheus/prometheus/discovery.TestTargetUpdatesOrder(0xc00023c780)
	/fuzz/target/discovery/manager_test.go:759 +0x64d4
testing.tRunner(0xc00023c780, 0x91b200)
	/usr/local/go/src/testing/testing.go:1193 +0xef
created by testing.(*T).Run
	/usr/local/go/src/testing/testing.go:1238 +0x2b5

goroutine 1 [chan receive]:
testing.(*T).Run(0xc00023c780, 0x901c6e, 0x16, 0x91b200, 0x49a666)
	/usr/local/go/src/testing/testing.go:1239 +0x2dc
testing.runTests.func1(0xc00023c500)
	/usr/local/go/src/testing/testing.go:1511 +0x78
testing.tRunner(0xc00023c500, 0xc0000ebc80)
	/usr/local/go/src/testing/testing.go:1193 +0xef
testing.runTests(0xc00021a168, 0xc09ec0, 0x8, 0x8, 0xc1cc41eb23d610f5, 0x6fc976178, 0xc16580, 0x4395a5)
	/usr/local/go/src/testing/testing.go:1509 +0x305
testing.(*M).Run(0xc00021f520, 0x0)
	/usr/local/go/src/testing/testing.go:1417 +0x1eb
go.uber.org/goleak.VerifyTestMain(0x98a6e0, 0xc00021f520, 0xc000435e70, 0x2, 0x2)
	/go/pkg/mod/go.uber.org/goleak@v1.1.10/testmain.go:53 +0x38
github.com/prometheus/prometheus/util/testutil.TolerantVerifyLeak(0xc00021f520)
	/fuzz/target/util/testutil/testing.go:34 +0xd2
github.com/prometheus/prometheus/discovery.TestMain(0xc00021f520)
	/fuzz/target/discovery/manager_test.go:40 +0x57
main.main()
	_testmain.go:59 +0x165

--- FAIL: TestTargetUpdatesOrder (25.58s)
    --- PASS: TestTargetUpdatesOrder/Single_TP_no_updates (0.00s)
    --- PASS: TestTargetUpdatesOrder/Multiple_TPs_no_updates (0.00s)
    --- PASS: TestTargetUpdatesOrder/Single_TP_empty_initials (2.51s)
    --- PASS: TestTargetUpdatesOrder/Multiple_TPs_empty_initials (2.70s)
    --- PASS: TestTargetUpdatesOrder/Single_TP_initials_only (0.00s)
    --- PASS: TestTargetUpdatesOrder/Multiple_TPs_initials_only (2.51s)
    --- PASS: TestTargetUpdatesOrder/Single_TP_initials_followed_by_empty_updates (2.51s)
    --- PASS: TestTargetUpdatesOrder/Single_TP_initials_and_new_groups (2.51s)
    --- FAIL: TestTargetUpdatesOrder/Multiple_TPs_initials_and_new_groups (5.10s)
    --- FAIL: TestTargetUpdatesOrder/One_TP_initials_arrive_after_other_TP_updates. (2.70s)
    --- FAIL: TestTargetUpdatesOrder/Single_TP_empty_update_in_between (5.03s)
FAIL
