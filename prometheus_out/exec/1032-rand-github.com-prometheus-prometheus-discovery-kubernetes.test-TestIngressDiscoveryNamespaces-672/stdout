[oraclert] selefcm timeout: 4500[oraclert] started
=== RUN   TestIngressDiscoveryNamespaces
[oraclert] already started, return existing entry.
-----New Blocking Bug:
---Primitive location:
/fuzz/target/discovery/kubernetes/kubernetes_test.go:96
---Primitive pointer:
0xc00061ae00
-----End Bug
    kubernetes_test.go:168: timed out, got 0 (max: 2) items, some events are skipped

-----Withdraw prim:0xc00061ae00
    ingress_test.go:204: 
        	Error Trace:	kubernetes_test.go:227
        	            				kubernetes_test.go:115
        	            				ingress_test.go:204
        	Error:      	Not equal: 
        	            	expected: "{\"ingress/ns1/testingress\":{\"Targets\":[{\"__address__\":\"example.com\",\"__meta_kubernetes_ingress_host\":\"example.com\",\"__meta_kubernetes_ingress_path\":\"/\",\"__meta_kubernetes_ingress_scheme\":\"http\"},{\"__address__\":\"example.com\",\"__meta_kubernetes_ingress_host\":\"example.com\",\"__meta_kubernetes_ingress_path\":\"/foo\",\"__meta_kubernetes_ingress_scheme\":\"http\"},{\"__address__\":\"test.example.com\",\"__meta_kubernetes_ingress_host\":\"test.example.com\",\"__meta_kubernetes_ingress_path\":\"/\",\"__meta_kubernetes_ingress_scheme\":\"http\"}],\"Labels\":{\"__meta_kubernetes_ingress_annotation_test_annotation\":\"testannotationvalue\",\"__meta_kubernetes_ingress_annotationpresent_test_annotation\":\"true\",\"__meta_kubernetes_ingress_label_test_label\":\"testvalue\",\"__meta_kubernetes_ingress_labelpresent_test_label\":\"true\",\"__meta_kubernetes_ingress_name\":\"testingress\",\"__meta_kubernetes_namespace\":\"ns1\"},\"Source\":\"ingress/ns1/testingress\"},\"ingress/ns2/testingress\":{\"Targets\":[{\"__address__\":\"example.com\",\"__meta_kubernetes_ingress_host\":\"example.com\",\"__meta_kubernetes_ingress_path\":\"/\",\"__meta_kubernetes_ingress_scheme\":\"http\"},{\"__address__\":\"example.com\",\"__meta_kubernetes_ingress_host\":\"example.com\",\"__meta_kubernetes_ingress_path\":\"/foo\",\"__meta_kubernetes_ingress_scheme\":\"http\"},{\"__address__\":\"test.example.com\",\"__meta_kubernetes_ingress_host\":\"test.example.com\",\"__meta_kubernetes_ingress_path\":\"/\",\"__meta_kubernetes_ingress_scheme\":\"http\"}],\"Labels\":{\"__meta_kubernetes_ingress_annotation_test_annotation\":\"testannotationvalue\",\"__meta_kubernetes_ingress_annotationpresent_test_annotation\":\"true\",\"__meta_kubernetes_ingress_label_test_label\":\"testvalue\",\"__meta_kubernetes_ingress_labelpresent_test_label\":\"true\",\"__meta_kubernetes_ingress_name\":\"testingress\",\"__meta_kubernetes_namespace\":\"ns2\"},\"Source\":\"ingress/ns2/testingress\"}}"
        	            	actual  : "{}"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-{"ingress/ns1/testingress":{"Targets":[{"__address__":"example.com","__meta_kubernetes_ingress_host":"example.com","__meta_kubernetes_ingress_path":"/","__meta_kubernetes_ingress_scheme":"http"},{"__address__":"example.com","__meta_kubernetes_ingress_host":"example.com","__meta_kubernetes_ingress_path":"/foo","__meta_kubernetes_ingress_scheme":"http"},{"__address__":"test.example.com","__meta_kubernetes_ingress_host":"test.example.com","__meta_kubernetes_ingress_path":"/","__meta_kubernetes_ingress_scheme":"http"}],"Labels":{"__meta_kubernetes_ingress_annotation_test_annotation":"testannotationvalue","__meta_kubernetes_ingress_annotationpresent_test_annotation":"true","__meta_kubernetes_ingress_label_test_label":"testvalue","__meta_kubernetes_ingress_labelpresent_test_label":"true","__meta_kubernetes_ingress_name":"testingress","__meta_kubernetes_namespace":"ns1"},"Source":"ingress/ns1/testingress"},"ingress/ns2/testingress":{"Targets":[{"__address__":"example.com","__meta_kubernetes_ingress_host":"example.com","__meta_kubernetes_ingress_path":"/","__meta_kubernetes_ingress_scheme":"http"},{"__address__":"example.com","__meta_kubernetes_ingress_host":"example.com","__meta_kubernetes_ingress_path":"/foo","__meta_kubernetes_ingress_scheme":"http"},{"__address__":"test.example.com","__meta_kubernetes_ingress_host":"test.example.com","__meta_kubernetes_ingress_path":"/","__meta_kubernetes_ingress_scheme":"http"}],"Labels":{"__meta_kubernetes_ingress_annotation_test_annotation":"testannotationvalue","__meta_kubernetes_ingress_annotationpresent_test_annotation":"true","__meta_kubernetes_ingress_label_test_label":"testvalue","__meta_kubernetes_ingress_labelpresent_test_label":"true","__meta_kubernetes_ingress_name":"testingress","__meta_kubernetes_namespace":"ns2"},"Source":"ingress/ns2/testingress"}}
        	            	+{}
        	Test:       	TestIngressDiscoveryNamespaces
[oraclert]: AfterRun
[oraclert]: AfterRunFuzz
[oraclert]: 1 selects
[oraclert]: CheckBugEnd...
End of unit test. Check bugs

-----NO BLOCKING


-----Withdraw prim:0xc00061ae00

---Stack:
goroutine 83 [running]:
runtime.DumpAllStack()
	/usr/local/go/src/runtime/myoracle_tmp.go:207 +0x85
gfuzz/pkg/oraclert.AfterRunFuzz(0xc000630a68)
	/usr/local/go/src/gfuzz/pkg/oraclert/oracle.go:369 +0xfd
gfuzz/pkg/oraclert.AfterRun(0xc000630a68)
	/usr/local/go/src/gfuzz/pkg/oraclert/oracle.go:322 +0x73
runtime.Goexit()
	/usr/local/go/src/runtime/panic.go:613 +0x1e5
testing.(*common).FailNow(0xc0002e8000)
	/usr/local/go/src/testing/testing.go:741 +0x3c
github.com/stretchr/testify/require.Equal(0x18eb288, 0xc0002e8000, 0x15312a0, 0xc00048b590, 0x15312a0, 0xc00048b5b0, 0x0, 0x0, 0x0)
	/go/pkg/mod/github.com/stretchr/testify@v1.7.0/require/require.go:165 +0x110
github.com/prometheus/prometheus/discovery/kubernetes.requireTargetGroups(0xc0002e8000, 0xc0002a0cf0, 0xc000426000)
	/fuzz/target/discovery/kubernetes/kubernetes_test.go:227 +0x19f
github.com/prometheus/prometheus/discovery/kubernetes.k8sDiscoveryTest.Run(0x18e1ae0, 0xc00063e540, 0x0, 0xc000630ba0, 0x2, 0xc0002a0cf0, 0xc0002e8000)
	/fuzz/target/discovery/kubernetes/kubernetes_test.go:115 +0x477
github.com/prometheus/prometheus/discovery/kubernetes.TestIngressDiscoveryNamespaces(0xc0002e8000)
	/fuzz/target/discovery/kubernetes/ingress_test.go:204 +0x2ef
testing.tRunner(0xc0002e8000, 0x17d5890)
	/usr/local/go/src/testing/testing.go:1193 +0xef
created by testing.(*T).Run
	/usr/local/go/src/testing/testing.go:1238 +0x2b5

goroutine 1 [chan receive]:
testing.(*T).Run(0xc0002e8000, 0x1742dd8, 0x1e, 0x17d5890, 0x4a1101)
	/usr/local/go/src/testing/testing.go:1239 +0x2dc
testing.runTests.func1(0xc00027d180)
	/usr/local/go/src/testing/testing.go:1511 +0x78
testing.tRunner(0xc00027d180, 0xc000269c80)
	/usr/local/go/src/testing/testing.go:1193 +0xef
testing.runTests(0xc000630ab0, 0x2254580, 0x23, 0x23, 0xc1cc42850235e8d8, 0x6fcdd9ddd, 0x22694e0, 0x4398a5)
	/usr/local/go/src/testing/testing.go:1509 +0x305
testing.(*M).Run(0xc00025a8f0, 0x0)
	/usr/local/go/src/testing/testing.go:1417 +0x1eb
go.uber.org/goleak.VerifyTestMain(0x18e2900, 0xc00025a8f0, 0xc00040fe70, 0x2, 0x2)
	/go/pkg/mod/go.uber.org/goleak@v1.1.10/testmain.go:53 +0x38
github.com/prometheus/prometheus/util/testutil.TolerantVerifyLeak(0xc00025a8f0)
	/fuzz/target/util/testutil/testing.go:34 +0xd2
github.com/prometheus/prometheus/discovery/kubernetes.TestMain(0xc00025a8f0)
	/fuzz/target/discovery/kubernetes/kubernetes_test.go:41 +0x57
main.main()
	_testmain.go:113 +0x165

goroutine 85 [chan receive]:
k8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000239ce0)
	/go/pkg/mod/k8s.io/client-go@v0.20.5/util/workqueue/queue.go:198 +0xac
created by k8s.io/client-go/util/workqueue.newQueue
	/go/pkg/mod/k8s.io/client-go@v0.20.5/util/workqueue/queue.go:58 +0x135

goroutine 87 [chan receive]:
k8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000239d40)
	/go/pkg/mod/k8s.io/client-go@v0.20.5/util/workqueue/queue.go:198 +0xac
created by k8s.io/client-go/util/workqueue.newQueue
	/go/pkg/mod/k8s.io/client-go@v0.20.5/util/workqueue/queue.go:58 +0x135

goroutine 49 [select]:
github.com/prometheus/prometheus/discovery/kubernetes.send(0x1912408, 0xc0006179a0, 0xc00021b380, 0xc00050e420)
	/fuzz/target/discovery/kubernetes/kubernetes.go:573 +0x1a9
github.com/prometheus/prometheus/discovery/kubernetes.(*Ingress).process(0xc00051d940, 0x1912408, 0xc0006179a0, 0xc00021b380, 0x100000000000000)
	/fuzz/target/discovery/kubernetes/ingress.go:130 +0x3da
github.com/prometheus/prometheus/discovery/kubernetes.(*Ingress).Run.func1(0xc00051d940, 0x1912408, 0xc0006179a0, 0xc00021b380)
	/fuzz/target/discovery/kubernetes/ingress.go:92 +0x49
created by github.com/prometheus/prometheus/discovery/kubernetes.(*Ingress).Run
	/fuzz/target/discovery/kubernetes/ingress.go:91 +0x17c

goroutine 24 [select]:
github.com/prometheus/prometheus/discovery/kubernetes.send(0x1912408, 0xc0006179a0, 0xc00021b380, 0xc00031c870)
	/fuzz/target/discovery/kubernetes/kubernetes.go:573 +0x1a9
github.com/prometheus/prometheus/discovery/kubernetes.(*Ingress).process(0xc00051d7c0, 0x1912408, 0xc0006179a0, 0xc00021b380, 0x0)
	/fuzz/target/discovery/kubernetes/ingress.go:130 +0x3da
github.com/prometheus/prometheus/discovery/kubernetes.(*Ingress).Run.func1(0xc00051d7c0, 0x1912408, 0xc0006179a0, 0xc00021b380)
	/fuzz/target/discovery/kubernetes/ingress.go:92 +0x49
created by github.com/prometheus/prometheus/discovery/kubernetes.(*Ingress).Run
	/fuzz/target/discovery/kubernetes/ingress.go:91 +0x17c

--- FAIL: TestIngressDiscoveryNamespaces (1.02s)
FAIL
