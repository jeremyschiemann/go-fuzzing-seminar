[oraclert] selefcm timeout: 500=== RUN   TestRecord_Corrupted
[oraclert] started
=== RUN   TestRecord_Corrupted/Test_corrupted_series_record
=== RUN   TestRecord_Corrupted/Test_corrupted_sample_record
=== RUN   TestRecord_Corrupted/Test_corrupted_tombstone_record
[oraclert]: AfterRun
[oraclert]: AfterRunFuzz
[oraclert]: 0 selects
[oraclert]: CheckBugEnd...
End of unit test. Check bugs

-----NO BLOCKING


---Stack:
goroutine 6 [running]:
runtime.DumpAllStack()
	/usr/local/go/src/runtime/myoracle_tmp.go:207 +0x85
gfuzz/pkg/oraclert.AfterRunFuzz(0xc00000c318)
	/usr/local/go/src/gfuzz/pkg/oraclert/oracle.go:369 +0xfd
gfuzz/pkg/oraclert.AfterRun(0xc00000c318)
	/usr/local/go/src/gfuzz/pkg/oraclert/oracle.go:322 +0x73
github.com/prometheus/prometheus/tsdb/record.TestRecord_Corrupted(0xc000206000)
	/fuzz/target/tsdb/record/record_test.go:125 +0x178
testing.tRunner(0xc000206000, 0x6566c8)
	/usr/local/go/src/testing/testing.go:1193 +0xef
created by testing.(*T).Run
	/usr/local/go/src/testing/testing.go:1238 +0x2b5

goroutine 1 [chan receive]:
testing.(*T).Run(0xc000206000, 0x6471ab, 0x14, 0x6566c8, 0x496001)
	/usr/local/go/src/testing/testing.go:1239 +0x2dc
testing.runTests.func1(0xc000155b80)
	/usr/local/go/src/testing/testing.go:1511 +0x78
testing.tRunner(0xc000155b80, 0xc000145de0)
	/usr/local/go/src/testing/testing.go:1193 +0xef
testing.runTests(0xc00000c300, 0x7b7e40, 0x3, 0x3, 0xc1cc417dc6395714, 0x6fee28645, 0x7bebc0, 0x644f1d)
	/usr/local/go/src/testing/testing.go:1509 +0x305
testing.(*M).Run(0xc000149a00, 0x0)
	/usr/local/go/src/testing/testing.go:1417 +0x1eb
main.main()
	_testmain.go:47 +0x138

--- PASS: TestRecord_Corrupted (0.00s)
    --- PASS: TestRecord_Corrupted/Test_corrupted_series_record (0.00s)
    --- PASS: TestRecord_Corrupted/Test_corrupted_sample_record (0.00s)
    --- PASS: TestRecord_Corrupted/Test_corrupted_tombstone_record (0.00s)
PASS
